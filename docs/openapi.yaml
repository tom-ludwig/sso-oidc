openapi: 3.0.3
info:
  title: Authorization API
  version: 1.0.0
paths:
  /oauth/authorize:
    get:
      summary: Authorization endpoint supporting OAuth2 Authorization Code flow
      description: |
        Validates `response_type`, `client_id`, and `redirect_uri`.  
        Requires a valid user session cookie `session_id`.  
        If no session, redirects to login UI.  
        If valid session, generates an authorization code and redirects to `redirect_uri` with the code.
      parameters:
        - name: response_type
          in: query
          required: true
          schema:
            type: string
            enum: ["code"]
          description: Must be "code"
        - name: client_id
          in: query
          required: true
          schema:
            type: string
            example: my-client-id
          description: Client identifier (validated against server)
        - name: redirect_uri
          in: query
          required: true
          schema:
            type: string
            format: uri
            example: https://my-frontend.com/callback
          description: Redirect URL after authorization (validated)
        - name: scope
          in: query
          required: false
          schema:
            type: string
          description: OAuth2 scope(s)
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: Opaque value to be returned to the client
        - name: nonce
          in: query
          required: false
          schema:
            type: string
          description: String value used to associate a client session with an ID token
      responses:
        "302":
          description: Redirect response
          headers:
            Location:
              description: Redirect URL
              schema:
                type: string
        "400":
          description: Bad Request - invalid `response_type`, `client_id`, or `redirect_uri`
          content:
            text/plain:
              schema:
                type: string
                example: Only 'code' response_type is supported
        "500":
          description: Internal Server Error - failed to validate session or issue code
          content:
            text/plain:
              schema:
                type: string
                example: Could not validate session
      security:
        - cookieAuth: []
  /oauth/token:
    post:
      summary: Exchange authorization code for tokens
      description: >
        This endpoint is used to exchange a valid authorization code for
        an ID token and access token, as part of the OAuth2 Authorization Code flow.
      operationId: exchangeToken
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
                - code
                - redirect_uri
                - client_id
                - client_secret
              properties:
                grant_type:
                  type: string
                  enum: ["authorization_code"]
                  description: Must be `authorization_code`
                code:
                  type: string
                  description: The authorization code received from the `/authorize` endpoint.
                redirect_uri:
                  type: string
                  format: uri
                  description: The redirect URI used in the authorization request.
                client_id:
                  type: string
                  description: The client application's identifier.
                client_secret:
                  type: string
                  description: The client application's secret.
      responses:
        "200":
          description: Successful token response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Bad Request (invalid code, client mismatch, etc.)
          content:
            text/plain:
              schema:
                type: string
        "401":
          description: Unauthorized (invalid client credentials)
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal Server Error (failed to issue tokens)
          content:
            text/plain:
              schema:
                type: string
  /.well-known/openid-configuration:
    get:
      summary: OpenID Connect Discovery Document
      description: |
        Returns the OpenID Connect configuration for this authorization server.
        Clients use this information to dynamically configure themselves to use your OIDC provider.
      operationId: getOidcDiscoveryDocument
      tags:
        - OpenID Provider
      responses:
        "200":
          description: OpenID Connect discovery metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OidcDiscoveryDocument"
  /.well-known/jwks.json:
    get:
      summary: Get JWKS
      description: Returns a JSON Web Key Set (JWKS) containing public keys used to verify JWTs.
      tags:
        - OpenID Provider
      responses:
        "200":
          description: Successful response with JWKS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jwks"
        "500":
          description: Server error during serialization
          content:
            text/plain:
              schema:
                type: string
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_id
  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Access token for API access.
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          example: 3600
          description: Time in seconds until the token expires.
        id_token:
          type: string
          description: JWT ID token containing user identity claims.
        refresh_token:
          type: string
          nullable: true
          description: Reserved for future use (not currently implemented).
    OidcDiscoveryDocument:
      type: object
      required:
        - issuer
        - authorization_endpoint
        - token_endpoint
        - jwks_uri
        - response_types_supported
        - subject_types_supported
        - id_token_signing_alg_values_supported
        - scopes_supported
        - token_endpoint_auth_methods_supported
        - claims_supported
      properties:
        issuer:
          type: string
          format: uri
          example: https://sso.example.com
        authorization_endpoint:
          type: string
          format: uri
          example: https://sso.example.com/oauth/authorize
        token_endpoint:
          type: string
          format: uri
          example: https://sso.example.com/oauth/token
        userinfo_endpoint:
          type: string
          format: uri
          nullable: true
          example: https://sso.example.com/userinfo
        jwks_uri:
          type: string
          format: uri
          example: https://sso.example.com/.well-known/jwks.json
        response_types_supported:
          type: array
          items:
            type: string
          example: ["code"]
        subject_types_supported:
          type: array
          items:
            type: string
          example: ["public"]
        id_token_signing_alg_values_supported:
          type: array
          items:
            type: string
          example: ["RS256"]
        scopes_supported:
          type: array
          items:
            type: string
          example: ["openid", "profile", "email"]
        token_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
          example: ["client_secret_post"]
        claims_supported:
          type: array
          items:
            type: string
          example: ["sub", "iss", "aud", "exp", "iat", "email", "name"]

    Jwk:
      type: object
      required: [kty, n, e]
      properties:
        kty:
          type: string
          example: RSA
        use:
          type: string
          example: sig
        alg:
          type: string
          example: RS256
        kid:
          type: string
          example: "example-key-id"
        n:
          type: string
          description: Base64url-encoded modulus
        e:
          type: string
          description: Base64url-encoded exponent

    Jwks:
      type: object
      required: [keys]
      properties:
        keys:
          type: array
          items:
            $ref: "#/components/schemas/Jwk"
